% a very simple object logic: a fragment of intuitionistic logic with
% universal quantifier and implication. The implication formulas are 
% restricted to the ones with only atomic formulas on the left of
% implication.

% Example taken from the CADE2007 systems description for Bedwyr.

memb A (cons A L).
memb A (cons B L) := memb A L.

pv L (p X Y) := memb (p X Y) L.
pv L (impl A B) := pv (cons A L) B.
pv L (forall B) := nabla x\ pv L (B x).

% To have these assertions tested automatically, use the -t option on the command line.
#assert 
  (pi r\ pi s\ pi t\ 
     pv nil (forall x\ impl (p x r) (forall y\ impl (p y s) (p x t))) => r = t).

#assert_not
  (pi r\ pi s\ pi t\ 
     pv nil (forall x\ impl (p x r) (forall y\ impl (p y s) (p x t))) => r = s).

