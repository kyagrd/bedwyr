% A very simple object logic: a fragment of intuitionistic logic with
% universal quantifier and implication. The implication formulas are
% restricted to the ones with only atomic formulas on the left of
% implication.

% Example taken from the CADE2007 system description for Bedwyr.

Define
  memb
by
  memb A (cons A L);
  memb A (cons B L) := memb A L.

Define
  pv
by
  pv L (p X Y) := memb (p X Y) L;
  pv L (impl A B) := pv (cons A L) B;
  pv L (_forall B) := nabla x, pv L (B x).

#assert
  (forall r s t,
     pv nil (_forall x\ impl (p x r) (_forall y\ impl (p y s) (p x t))) -> r = t).

#assert_not
  (forall r s t,
     pv nil (_forall x\ impl (p x r) (_forall y\ impl (p y s) (p x t))) -> r = s).
