% type assignment for simply typed lambda calculus

elem A (cons A L).
elem A (cons B L) := elem A L.

typeof L S T := elem (pr S T) L.
typeof L (abs M) (ar T1 T2) := nabla x\ typeof (cons (pr x T1) L) (M x) T2.
typeof L (app M N) T := sigma T1\ typeof L N T1 & typeof L M (ar T1 T). 

% x\xx is not typable.
test := pi T\ typeof nil (abs x\ app x x) T => false.
