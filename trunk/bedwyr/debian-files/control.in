Source: @PACKAGE_TARNAME@
Section: math
Priority: optional
Maintainer: Quentin Heath <quentin.heath@inria.fr>
Build-Depends: ocaml (>= 3.10.0), autoconf (>= 2.60),
 debhelper (>= 7.0.50~), fakeroot, lintian, devscripts
Build-Depends-Indep: transfig, ghostscript, hevea (>= 1.10),
 texlive-latex-base (>= 2009-11), texlive-latex-extra (>= 2009-10)
Standards-Version: 3.9.4
Homepage: @PACKAGE_URL@
Vcs-Svn: svn://scm.gforge.inria.fr/svn/slimmer
Vcs-Browser: https://gforge.inria.fr/scm/viewvc.php/?root=slimmer

Package: @PACKAGE_TARNAME@
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, ocaml-base-@OCAML_VERSION@
Recommends: rlwrap
Suggests: @PACKAGE_TARNAME@-doc
Description: @PACKAGE_TAGLINE@
 Bedwyr is a generalization of logic programming
 that allows model checking directly on syntactic expression
 possibly containing bindings.
 .
 This system, written in OCaml, is a direct implementation of
 two recent advances in the theory of proof search:
 a symmetric treatment of finite success and finite failure
 (which allows capturing both aspects of may and must behavior
 in operational semantics and mixing model checking and logic
 programming), and direct support for lambda-tree syntax,
 as in lambdaProlog, via term-level lambda-binders,
 higher-order pattern unification, and the nabla-quantifier.

Package: @PACKAGE_TARNAME@-doc
Architecture: all
Depends: ${misc:Depends}
Recommends: @PACKAGE_TARNAME@
Enhances: @PACKAGE_TARNAME@
Description: the not-so-sound documentation
 Bedwyr is a generalization of logic programming
 that allows model checking directly on syntactic expression
 possibly containing bindings.
 .
 This package contains documentation for Bedwyr (both a quickstart guide
 and a reference manual) in html, ps and pdf format, as well as the
 source code documentation in html and ocamldoc-dump format.
