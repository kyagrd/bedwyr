# DEFINITIONS

PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
ARCH_NAME=$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

TAR= @TAR@
FIND= @FIND@
CPIO= @CPIO@ -dumpv
#CPIO= @CPIO@ -dump -R root:root
CHMOD= @CHMOD@

prefix        =@prefix@
exec_prefix   =@exec_prefix@
bindir        =@bindir@
#sbindir       =@sbindir@
#libexecdir    =@libexecdir@
datarootdir   =@datarootdir@
#datadir       =@datadir@
#sysconfdir    =@sysconfdir@
#sharedstatedir=@sharedstatedir@
#localstatedir =@localstatedir@
#includedir    =@includedir@
#oldincludedir =@oldincludedir@
docdir        =@docdir@-$(PACKAGE_VERSION)
#infodir       =@infodir@
htmldir       =@htmldir@
#dvidir        =@dvidir@
pdfdir        =@pdfdir@
psdir         =@psdir@
libdir        =@libdir@
#localedir     =@localedir@
mandir        =@mandir@

PREFIX        =$(DESTDIR)$(prefix)
EXEC_PREFIX   =$(DESTDIR)$(exec_prefix)
BINDIR        =$(DESTDIR)$(bindir)
#SBINDIR       =$(DESTDIR)$(sbindir)
#LIBEXECDIR    =$(DESTDIR)$(libexecdir)
DATAROOTDIR   =$(DESTDIR)$(datarootdir)
#DATADIR       =$(DESTDIR)$(datadir)
#SYSCONFDIR    =$(DESTDIR)$(sysconfdir)
#SHAREDSTATEDIR=$(DESTDIR)$(sharedstatedir)
#LOCALSTATEDIR =$(DESTDIR)$(localstatedir)
#INCLUDEDIR    =$(DESTDIR)$(includedir)
#OLDINCLUDEDIR =$(DESTDIR)$(oldincludedir)
DOCDIR        =$(DESTDIR)$(docdir)
#INFODIR       =$(DESTDIR)$(infodir)
HTMLDIR       =$(DESTDIR)$(htmldir)
#DVIDIR        =$(DESTDIR)$(dvidir)
PDFDIR        =$(DESTDIR)$(pdfdir)
PSDIR         =$(DESTDIR)$(psdir)
LIBDIR        =$(DESTDIR)$(libdir)/ocaml/slimmer
#LOCALEDIR     =$(DESTDIR)$(localedir)
MANDIR        =$(DESTDIR)$(mandir)

DIR_MODE=755
BIN_MODE=755
DOC_MODE=644
INSTALL=install -v
#INSTALL=install -o root -g root
INSTALL_DIR = $(INSTALL) -m $(DIR_MODE) -d
INSTALL_BIN = $(INSTALL) -m $(BIN_MODE) -p
INSTALL_DOC = $(INSTALL) -m $(DOC_MODE) -p

cma = @cma@

ndcore = src/ndcore/ndcore.$(cma)
bedwyr = src/bedwyr
spec   = src/spec

# SOURCE FILES

XPL = list.def internal/scoping.def internal/checks.def \
      miniml.def 3bits.def lambda.def progs.def \
      graph-alt.def minmax.def multisim.def \
      tictactoe.def \
      pi/pi_trace.def pi/corr-assert.def pi/pi_modal.def \
      pi/pi_mini.def pi/pi_nat.def pi/pi_church.def

NDCORE_DOC = COPYING CHANGES README TODO
BEDWYR_DOC = COPYING CHANGES README TODO
CONSTRIB   = contrib/bedwyr.el contrib/bedwyr.vim
EXAMPLES   = $(shell find examples -type f '!' -path '*.svn*' '!' -name \*.old)
USERGUIDE  = doc/*.tex doc/userguide.bib doc/Makefile
PS         = userguide.ps.gz
PDF        = userguide.pdf
HTML       = userguide.html
ARCH_FILES = configure.ac Makefile.in src/Makefile.in \
	     $(DOC) $(CONSTRIB) $(EXAMPLES) \
	     $(USERGUIDE)

# BUILDING

all: $(PACKAGE_TARNAME)
#all: ndcore bedwyr

.PHONY: ndcore
ndcore: $(ndcore)

.PHONY: bedwyr
bedwyr: $(bedwyr)

.PHONY: spec
spec: $(spec)

$(ndcore): src/Makefile
	make -C src ndcore/ndcore.$(cma)

$(bedwyr): src/Makefile src/config.ml
	make -C src bedwyr

src/Makefile: src/Makefile.in configure
	./configure --enable-doc

Makefile: Makefile.in configure
	./configure --enable-doc

configure: configure.ac
	autoconf

.PHONY: doc
doc:
	make -C src ndcore_doc
	make -C src bedwyr_doc
	make -C doc

# TESTING

.PHONY: test
test: $(ndcore) $(bedwyr)
	@echo Testing the core LLambda library
	make -C src test
	@echo Testing bedwyr on examples
	@bash -c 'time $(MAKE) examples_tests'

.PHONY: examples_tests
examples_tests: Makefile $(ndcore) $(bedwyr)
	@for i in $(XPL) ; do \
	  echo "==== Running tests in $$i ====" ; \
	  if $(bedwyr) -t -I examples/$$i ; then echo "All done." ; else echo "Error." ; break ; fi ; \
	done

# DOC

doc/$(PS):
	make -C doc $(PS)
doc/$(PDF):
	make -C doc $(PDF)
doc/$(HTML):
	make -C doc $(HTML)

# INSTALL

install: install_$(PACKAGE_TARNAME)

install_ndcore: $(ndcore)
	@$(INSTALL_DIR) $(LIBDIR)
	@$(INSTALL_BIN) $(ndcore) $(LIBDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(NDCORE_DOC) $(DOCDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(HTMLDIR)/html
	@make -C src ndcore_doc
	@$(INSTALL_DOC) doc/html/ndcore/style.css doc/html/ndcore/*.html $(HTMLDIR)/html
endif

#install_bedwyr: $(bedwyr) doc/$(PS) doc/$(PDF) doc/$(HTML)
install_bedwyr: $(bedwyr)
	@$(INSTALL_DIR) $(BINDIR)
	@$(INSTALL_BIN) $(bedwyr) $(BINDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(BEDWYR_DOC) $(DOCDIR)
	@$(INSTALL_DIR) $(DOCDIR)/contrib
	@$(INSTALL_DOC) $(CONSTRIB) $(DOCDIR)/contrib
	@tr ' ' '\n' <<<"examples $(EXAMPLES)" | ${CPIO} $(DOCDIR) 2>&1
	@${FIND} $(DOCDIR)/examples -type d -exec ${CHMOD} $(DIR_MODE) {} +
	@${FIND} $(DOCDIR)/examples -type f -exec ${CHMOD} ${DOC_MODE} {} +
#	@$(INSTALL_DIR) $(PSDIR)
#	@$(INSTALL_DIR) $(PDFDIR)
#	@$(INSTALL_DIR) $(HTMLDIR)
#	@$(INSTALL_DOC) doc/$(PS) $(PSDIR)
#	@$(INSTALL_DOC) doc/$(PDF) $(PDFDIR)
#	@$(INSTALL_DOC) doc/$(HTML) $(HTMLDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(HTMLDIR)/html
	@make -C src bedwyr_doc
	@$(INSTALL_DOC) doc/html/bedwyr/style.css doc/html/bedwyr/*.html $(HTMLDIR)/html
endif
#	@$(INSTALL_DIR) $(MANDIR)/man1
#	@$(INSTALL_DOC) $(MAN) $(MANDIR)/man1

# ARCHIVE

dist: src/Makefile bz2
bz2: $(ARCH_NAME).tar.bz2
gz: $(ARCH_NAME).tar.gz

.PHONY: src/$(PACKAGE_TARNAME).tar
src/bedwyr_src.tar:
	make -C src $(PACKAGE_TARNAME).tar
$(ARCH_NAME).tar: $(ARCH_FILES) src/$(PACKAGE_TARNAME).tar
	$(TAR) -cf $@ --xform 's|^|$(ARCH_NAME)/|' $(ARCH_FILES)
	$(TAR) -Af $@ src/$(PACKAGE_TARNAME).tar
%.bz2: %
	bzip2 -f $<
	$(TAR) -tf $@
%.gz: %
	gzip -f $<
	$(TAR) -tf $@

# OTHER TARGETS

distclean: clean
	find . -name '*~' -exec rm \{\} \;
	rm -f src/depend
	rm -f src/ndcore/depend

clean:
	rm -f $(D).tar.bz2 $(D).tar.gz
	make -C src clean
	rm -f src/Makefile
	make -C doc clean
