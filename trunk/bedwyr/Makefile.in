# DEFINITIONS

cma = @cma@
TAR = @TAR@
VERSION=@PACKAGE_VERSION@
D=bedwyr-$(VERSION)

# SOURCE FILES

XPL = list.def internal/scoping.def internal/checks.def \
      miniml.def 3bits.def lambda.def progs.def \
      graph-alt.def minmax.def multisim.def \
      tictactoe.def \
      pi/pi_trace.def pi/corr-assert.def pi/pi_modal.def \
      pi/pi_mini.def pi/pi_nat.def pi/pi_church.def

DOC_FILES  =
#DOC_FILES  = doc/userguide.pdf doc/userguide.ps.gz doc/userguide.html \
	     doc/*.tex doc/userguide.bib doc/Makefile
ARCH_FILES = COPYING CHANGES README TODO configure.ac install-sh Makefile.in \
	     contrib/bedwyr.el contrib/bedwyr.vim \
	     src/Makefile.in \
	     $(DOC_FILES) \
	     $(shell find examples -type f '!' -path '*.svn*' -exec echo \{\} +)

# BUILDING

all: src/bedwyr

.PHONY: src/bedwyr
src/bedwyr: src/Makefile
	make -C src bedwyr

.PHONY: src/ndcore.$(cma)
src/ndcore.$(cma): src/Makefile
	make -C src ndcore.$(cma)

src/Makefile: src/Makefile.in configure
	./configure

Makefile: Makefile.in configure
	./configure

configure: configure.ac
	autoconf

.PHONY: test
test: src/Makefile
	@echo Testing the core LLambda library
	make -C src test
	@echo Testing bedwyr on examples
	@bash -c 'time $(MAKE) examples_tests'

.PHONY: examples_tests
examples_tests: src/bedwyr Makefile
	@for i in $(XPL) ; do \
	  echo "==== Running tests in $$i ====" ; \
	  if src/bedwyr -t -I examples/$$i ; then echo "All done." ; else echo "Error." ; break ; fi ; \
	done

.PHONY: doc
doc:
	make -C src doc
	make -C doc

superclean: clean
	find . -name '*~' -exec rm \{\} \;
	rm -f src/depend
	rm -f src/ndcore/depend

clean:
	rm -f $(D).tar.bz2 $(D).tar.gz
	make -C src clean
	rm -f src/Makefile
	make -C doc clean

dist: src/Makefile bz2
bz2: $(D).tar.bz2
gz: $(D).tar.gz

.PHONY: src/bedwyr_src.tar
src/bedwyr_src.tar:
	make -C src bedwyr_src.tar
$(D).tar: $(ARCH_FILES) src/bedwyr_src.tar
	$(TAR) -cf $@ --xform 's|^|$(D)/|' $(ARCH_FILES)
	$(TAR) -Af $@ src/bedwyr_src.tar
%.bz2: %
	bzip2 -f $<
	$(TAR) -tf $@
%.gz: %
	gzip -f $<
	$(TAR) -tf $@
