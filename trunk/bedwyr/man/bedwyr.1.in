.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"  Bedwyr prover                                                           "
.\"  Copyright (C) 2012 Quentin Heath                                        "
.\"                                                                          "
.\"  This program is free software; you can redistribute it and/or modify    "
.\"  it under the terms of the GNU General Public License as published by    "
.\"  the Free Software Foundation; either version 2 of the License, or       "
.\"  (at your option) any later version.                                     "
.\"                                                                          "
.\"  This program is distributed in the hope that it will be useful,         "
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of          "
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           "
.\"  GNU General Public License for more details.                            "
.\"                                                                          "
.\"  You should have received a copy of the GNU General Public License along "
.\"  with this program; if not, write to the Free Software Foundation, Inc., "
.\"  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.             "
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" @configure_input@
.\"
.Dd July 15, 2013
.Os @PACKAGE_NAME@ v@PACKAGE_VERSION@
.Dt BEDWYR 1 URM
.\"
.\"
.Sh NAME
.Nm @PACKAGE_TARNAME@ ,
.Nm Ns Nm .byte ,
.Nm Ns Nm .native
.Nd @PACKAGE_TAGLINE@
.\"
.\"
.Sh SYNOPSIS
.Nm Op Fl I
.Op Fl t
.Op Fl \-strict
.Op Fl d Ar command
.Op Fl e Ar query
.Op Fl \-freezing Ar fp
.Op Fl \-saturation Ar sp
.Op Fl \-version
.Op Fl D
.Op Fl help | Fl \-help
.Op Ar
.\"
.\"
.Sh DESCRIPTION
@PACKAGE_NAME@ is a tabled logic programming system for the Level-0/1
fragment of the Linc logic.
.Pp
It is based on
.An Tiu Ns 's
Level-0/1, and
.An Nadathur & Linell Ns 's
LLambda library. For background on the system, see
.Rs
.%T Mixing Finite Success and Finite Failure in an Automated Prover
.%A Alwen Tiu
.%A Gopalan Nadathur
.%A Dale Miller
.%O http://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/eshol05.pdf
.Re
.Pp
Webpage:
.Pa http://slimmer.gforge.inria.fr/bedwyr/ .
.Pp
When invoked as
.Nm
the fastest available binary is used (i.e.
.Nm Ns Nm .native
if present; otherwise,
.Nm Ns Nm .byte ) .
.\"
.\"
.Sh OPTIONS
.Bl -tag -width Ic
.It Fl I
Do not enter interactive mode.
.It Fl t
Run tests in definition files.  Those are the queries given by
.Ic #assert Ar form Ns Ic \&.
(see
.Sx META-COMMANDS ) .
.It Fl \-strict
Quit at the first non-interactive error. If not set,
.Nm
won't exit on non-interactive errors (except for critical errors of
status
.Ar 5 ,
see
.Sx EXIT STATUS )
but will exit at the end of the non-interactive stage with the exit
status of the first non-interactive error (this is useful to typecheck a
whole file at once).
.It Fl d Ar command
Run
.Ar command
(declaration of definition, see
.Sx INPUT FILES ) .
Multiple commands can be given.  They are run after all the input files
are read, and before executing queries.
.It Fl e Ar query
Execute
.Ar query
(see
.Sx TOPLEVEL QUERIES ) .
Multiple queries can be given.  They are executed after all the commands
are run, and before entering the interactive loop.
.It Fl \-freezing Ar fp
Enable backward chaining and set its limit (the so-called
.Ar freezing-point )
to
.Ar fp .
Setting it to 0 (the default value) disables backward chaining,
setting it to \-1 allows for infinite chaining (usually not a smart idea).
The value 1 should be a good compromise.
.It Fl \-saturation Ar sp
Enable forward chaining and set its limit (the so-called
.Ar saturation-point )
to
.Ar sp .
Setting it to 0 (the default value) disables forward chaining,
setting it to \-1 allows infinite chaining and therefore actual saturation
of the table wrt the theorem.
.It Fl \-version
Display version information and a list of compiled features.
.It Fl D
Print debugging information on stderr.  Can be enabled/disabled at
run-time with
.Ic #debug .
.It Fl help , \-help
Display the list of command-line options.
.El
.\"
.\"
.Sh EXIT STATUS
.Ex -std
.Bl -tag -width Ic
.It Ar 1
Input error (base syntax error, type error)
.It Ar 2
Definition error (wrong declaration, wrong definition or object misuse)
.It Ar 3
Core error (LLambda violation)
.It Ar 4
Solver error (Level 0/1 violation)
.It Ar 5
Generic error (failed assertion, undefined error)
.El
.\"
.\"
.Sh INPUT FILES
A definition file can contain any meta-command (see
.Sx META-COMMANDS ) ,
in addition to any of the following commands.
.\"
.Ss Type declaration
.Bl -tag -width Ic
.It Ic Kind Ar list Ic type \-> type.
.Ar nat , string
and
.Ar  prop
are built in, and
.Ar list
is predeclared.
.El
.\"
.Ss Constant declaration
.Bl -tag -width Ic
.It Ic Type Ar :: Ic A \-> list A \-> list A.
.It Ic Type Ar nil Ic list A.
.Ar true
and
.Ar false
are built in,
.Ar 0 , 1 , ...
and any quoted string are runtime-defined constants of type
.Ic nat
and
.Ic string ,
and
.Ar ::
and
.Ar nil
are predeclared.
.El
.\"
.Ss Predicate declaration and definition
.Bl -tag -width Ic
.It Ic Define Ar member Ic \&: A \-> list A \-> prop by\
  Ar member X (X :: _) Ic \&;\
  Ar member X (_ :: L) := member X L Ns Ic \&.
.Ic print , println , printstr , fprint , fprintln ,
.Ic fprintstr , fopen_out
and
.Ic fclose_out
are built in,
.Ic member
is predefined.
.El
.\"
.Ss Theorems
.Bl -tag -width Ic
.It Ic Theorem Ar thm Ic \&: Ar forall Y, body X Y \-> head X Ns Ic \&.
A theorem is a valid Abella theorem with some restrictions on its body
(neither implication nor universal quantification).
.El
.\"
.\"
.Sh TOPLEVEL QUERIES
.Bl -tag -width Ic
.It Ic ?= Ar query Ns Ic \&.
The query entered at the prompt can either be a meta-command, which is
executed, or a formula, which is solved (
.Nm
searches for all substitutions of free variables satisfying
.Ar query
and offers to display them one by one).
.It Nm Fl e Qo Ar query Ns Ic \&. Qc
Queries given via this option are dealt with in the exact same way.
.El
.\"
.\"
.Sh META-COMMANDS
Meta-commands can be given both in a file and to the toplevel.
.Bl -tag -width Ic
.It Ic #help.
This command should give a starting point.
.It Ic #exit.
And this one, an ending point.
.El
.\"
.\"
.Sh OUTPUT
Non-interactive output is offerd by
.Ic #save_table Ar pred Qo Ar table.def Qc Ns Ic \&.
or
.Ic #export Qo Ar tables.xml Qc Ns Ic \&. .
.\"
.\"
.Sh FILES
.Bl -tag -width Ic
.It Pa +pkgdatadir+/examples/
Sample input files.
Most of them have assertions that can be checked with the command-line option
.Fl t .
.It Pa +pkgdatadir+/contrib/
Text-mode goodies.
.El
.\"
.\"
.Sh SEE ALSO
.Xr abella 1 ,
.Xr tac 1 ,
.Xr teyjus 1
