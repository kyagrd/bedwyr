# DEFINITIONS

TAR	= @TAR@

prefix		= @prefix@
exec_prefix	= @exec_prefix@
libdir		= @libdir@

LIBDIR		= $(DESTDIR)$(libdir)/ocaml/slimmer

cmo = @cmo@
cma = @cma@
INCLUDES = -I ndcore
OCAMLDEP = @OCAMLDEP@
OCAMLC = @OCAMLC@ @OCAMLCFLAGS@ $(INCLUDES) \
	 -I $(LIBDIR) -I $(shell ocamlc -where)/slimmer -c
OCAMLL = @OCAMLC@ @OCAMLLFLAGS@ $(INCLUDES) \
	 -I $(LIBDIR) -I $(shell ocamlc -where)/slimmer
OCAMLDOC = @OCAMLDOC@ $(INCLUDES) \
	   -I $(LIBDIR) -I $(shell ocamlc -where)/slimmer \
	   -stars -m A
OCAMLYACC = @OCAMLYACC@ -v
OCAMLLEX = @OCAMLLEX@

# SOURCE FILES

BEDWYR_MLLY= table.ml system.ml prover.ml \
	     config.ml parser.mly lexer.mll \
	     main.ml
BEDWYR_MLL = $(BEDWYR_MLLY:.mly=.ml)
BEDWYR_ML  = $(BEDWYR_MLL:.mll=.ml)

BEDWYR_MLI = $(filter-out parser.mli,$(wildcard $(BEDWYR_ML:.ml=.mli)))

BEDWYR_SRC = $(BEDWYR_ML) $(BEDWYR_MLI)

BEDWYR_FILES = $(BEDWYR_MLLY) $(BEDWYR_MLI)

BEDWYR_O = $(BEDWYR_ML:.ml=.$(cmo))

# BUILDING

all: bedwyr

bedwyr: $(BEDWYR_O)
	$(OCAMLL) unix.$(cma) ndcore.$(cma) $^ -o $@

-include depend
depend: $(BEDWYR_SRC)
	$(OCAMLDEP) $^ > depend

.SUFFIXES: .mll .mly .ml .cmo .cmx .mli .cmi

.ml.$(cmo):
	$(OCAMLC) $<
.mli.cmi:
	$(OCAMLC) $<
.mly.ml:
	$(OCAMLYACC) $<
.mly.mli:
	$(OCAMLYACC) $<
.mll.ml:
	$(OCAMLLEX) $<

# OTHER TARGETS

.PHONY: doc bedwyr.tar

doc: $(BEDWYR_O)
ifneq (@OCAMLDOC@,)
	$(OCAMLDOC) -d ../doc/html/bedwyr -html $(BEDWYR_MLI)
endif

bedwyr.tar: $(BEDWYR_FILES) Makefile.in
	$(TAR) -cf $@ --xform 's|^|src/|' $^

.PHONY: clean
clean:
	rm -f depend
	rm -f bedwyr
	rm -f *.cm[ixoa] *.cmxa *.[oa]
	rm -f parser.ml parser.mli parser.output lexer.ml
	rm -f bedwyr.tar
	rm -f ../doc/html/bedwyr/*
