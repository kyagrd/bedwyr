
all: bedwyr

# DEFINITIONS

cmo = @cmo@
cma = @cma@
OCAMLC = @OCAMLC@ -c -I ndcore
OCAMLL = @OCAMLC@
OCAMLDEP = @OCAMLDEP@ -I ndcore
OCAMLDOC = ocamldoc
OCAMLYACC = @OCAMLYACC@ -v
OCAMLLEX = @OCAMLLEX@

# SOURCE FILES

CORE_ML    = ndcore/term.ml ndcore/norm.ml ndcore/unify.ml ndcore/pprint.ml
TEST_ML    = ndcore/oUnit.ml ndcore/test.ml
BEDWYR_ML  = table.ml system.ml parser.ml lexer.ml prover.ml main.ml

CORE_SRC   = $(CORE_ML)   $(wildcard $(CORE_ML:.ml=.mli))
BEDWYR_SRC = $(BEDWYR_ML) $(wildcard $(BEDWYR_ML:.ml=.mli))

BEDWYR = $(CORE_ML:.ml=.$(cmo)) $(BEDWYR_ML:.ml=.$(cmo))
TEST   = $(CORE_ML:.ml=.$(cmo)) $(TEST_ML:.ml=.$(cmo))

# BUILDING

bedwyr: $(BEDWYR)
	$(OCAMLL) unix.$(cma) $(BEDWYR) -o bedwyr

-include depend
depend: $(CORE_SRC) $(BEDWYR_SRC) $(TEST_ML)
	$(OCAMLDEP) $(CORE_SRC) $(BEDWYR_SRC) $(TEST_ML) > depend

%.cmx: %.ml
	$(OCAMLC) $<
%.cmo: %.ml
	$(OCAMLC) $<
%.cmi: %.mli
	$(OCAMLC) $<
%.ml: %.mly
	$(OCAMLYACC) $<
%.ml: %.mll
	$(OCAMLLEX) $<

# TARGETS FOR CORE LLAMBDA MODULES

test: ndcore/test
	ndcore/test
ndcore/test: $(TEST)
	$(OCAMLL) unix.$(cma) $(TEST) -o ndcore/test
doc:
	$(OCAMLDOC) -stars -d ../doc -html $(BEDWYR_SRC)

# MISC

run: bedwyr
	ledit ./bedwyr

.PHONY: clean superclean

clean:
	rm -f bedwyr
	rm -f ndcore/test
	rm -f parser.ml parser.mli lexer.ml parser.output
	rm -f *.cm[ixo] *.o
	rm -f ndcore/*.cm[ixo] ndcore/*.o
superclean: clean
	find . -name '*~' -exec rm \{\} \;
	rm -f depend
	rm -f ndcore/depend
