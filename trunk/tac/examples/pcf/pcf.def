% This file was generated by mod2def, part of the Tac system.
#define
"member a0 a1 :=
  (sigma L\X\ a0 = X, a1 = cons X L, true);
  (sigma Y\L\X\ a0 = X, a1 = cons Y L, member X L)"
"eval a0 a1 :=
  (a0 = zero, a1 = zero, true);
  (a0 = tt, a1 = tt, true);
  (a0 = ff, a1 = ff, true);
  (sigma V\M\ a0 = succ M, a1 = succ V, eval M V);
  (sigma M\ a0 = pred M, a1 = zero, eval M zero);
  (sigma V\M\ a0 = pred M, a1 = V, eval M (succ V));
  (sigma M\ a0 = is_zero M, a1 = tt, eval M zero);
  (sigma V\M\ a0 = is_zero M, a1 = ff, eval M (succ V));
  (sigma V\M\N1\N2\ a0 = if M N1 N2, a1 = V, (eval M tt), (eval N1 V));
  (sigma V\M\N1\N2\ a0 = if M N1 N2, a1 = V, (eval M ff), (eval N2 V));
  (sigma T\R\ a0 = abs T R, a1 = abs T R, true);
  (sigma T\R\V\M\N\ a0 = app M N, a1 = V, (eval M (abs T R)), (eval (R N) V));
  (sigma V\T\R\ a0 = rec T R, a1 = V, eval (R (rec T R)) V)"
"of a0 a1 a2 :=
  (sigma Context\ a0 = Context, a1 = zero, a2 = num, true);
  (sigma Context\ a0 = Context, a1 = tt, a2 = bool, true);
  (sigma Context\ a0 = Context, a1 = ff, a2 = bool, true);
  (sigma M\Context\ a0 = Context, a1 = succ M, a2 = num, of Context M num);
  (sigma M\Context\ a0 = Context, a1 = pred M, a2 = num, of Context M num);
  (sigma M\Context\ a0 = Context, a1 = is_zero M, a2 = bool, of Context M num);
  (sigma T\M\N1\N2\Context\ a0 = Context, a1 = if M N1 N2, a2 = T, ((of Context M bool), (of Context N1 T)), (of Context N2 T));
  (sigma U\T\R\Context\ a0 = Context, a1 = abs T R, a2 = arr T U, nabla n\ (of (cons (bind n T) Context) (R n) U));
  (sigma U\T\M\N\Context\ a0 = Context, a1 = app M N, a2 = T, (of Context M (arr U T)), (of Context N U));
  (sigma T\R\Context\ a0 = Context, a1 = rec T R, a2 = T, nabla n\ (of (cons (bind n T) Context) (R n) T));
  (sigma T\N\Context\ a0 = Context, a1 = N, a2 = T, member (bind N T) Context)".

