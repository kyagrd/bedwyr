Building and Installing the Tac system:

Building Tac on Linux:
  Requirements:
    taci: O'Caml
    logics_gen: O'Caml
    StickyTaci: O'Caml, Mono
      Note: Compiles and runs using Mono but does not run correctly.
    Stekki: O'Caml, Labltk
    ndcore: O'Caml

  Compiling:
    You first have to make sure that the ndcore library inside Bedwyr
    is compiled:
  
      tac $ make -C ../bedwyr
    
    Then you can build taci and Stekki:
      
      tac $ make -C taci
      tac $ make -C Stekki

Building Tac on Windows XP:
  The easiest way is to build Tac on Windows XP is using Microsoft Visual
Studio 2005 along with the included solution "tac/tac.sln".  This method
depends additionally on the tool Ocamake, which is provided at
"tac/util/ocamake.ml".

  Requirements:
    taci: O'Caml
    logics_gen: O'Caml
    StickyTaci: O'Caml, Microsoft CLR
    Stekki: O'Caml, Labltk
      Note: Compiles and runs but immediately throws an exception due
      to the use of Unix pipes.
    ndcore: O'Caml

  Compiling:
    First you must compile Ocamake and put it on your path.  The easiest
  way to do this is to first compile it:

      ocamlc unix.cma str.cma ocamake.ml -o ocamake.exe

    And then place it on your path.  If you have already installed O'Caml
  a reasonable place to copy the generated executable is in the O'Caml bin
  directory.
    Next, simply open the provided solution and build it (F7).  All components
  that can be built (namely, taci, logics_gen, StickyTaci, and ndcore) will be
  built in the proper order.  The resulting executables will be copied to
  the directory "tac/bin".
