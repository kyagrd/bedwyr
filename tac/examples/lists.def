#open "naturals.def".

#define "empty {x} := (x = nil)".

#define "list {X} := (X = nil); (sigma H\ TL\ X = (cons H TL), (list TL))".
#define
  "equal {X} {Y} :=
    (X = nil, Y = nil);
    (sigma H1\ H2\ T1\ T2\
      X = cons H1 T1, Y = cons H2 T2, H1 = H2, equal T1 T2)".

#define "nat_list {X} := (X = nil);
                         (sigma H\ TL\ nat H, X = (cons H TL), (nat_list TL))".

#define "mem X {L} := sigma hd\tl\ L = cons hd tl, (X=hd;mem X tl)".

#define "length {x} {n} :=
  (x = nil, n = o);
  (sigma h\ t\ m\ x = (cons h t), n = s m, length t m)".

#define
  "append {L1} L2 {L3} :=
    (L1 = nil, L2 = L3);
    (sigma H\ T1\ T3\
      L1 = cons H T1, 
      L3 = cons H T3,
      append T1 L2 T3)".

#define
  "reverse {L1} L2 :=
    (L1 = nil, L2 = nil); 
    (sigma H\ T\ RT\
      L1 = cons H T, reverse T RT, append RT (cons H nil) L2)".

#define
  "rev {L1} L2 L3 :=
    (L1 = nil, L2 = L3);
    (sigma E\LS\ L1 = cons E LS, rev LS (cons E L2) L3)".

#define "sublist {l} {m} :=
  (sigma h1\ h2\ k\
    append h1 k m,
    append l h2 k)".

#define
  "delayeq {X} {Y} :=
    (X = nil, Y = nil);
    (sigma H1\ H2\ T1\ T2\
      X = cons H1 T1, Y = cons H2 T2, H1 = H2, pi x\ delayeq T1 T2)".
