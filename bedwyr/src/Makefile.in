# DEFINITIONS

PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
ARCH=$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

TAR = @TAR@

cmo = @cmo@
cma = @cma@
OCAMLC = @OCAMLC@ @OCAMLCFLAGS@ -c -I ndcore -I ndcore/tests
OCAMLL = @OCAMLC@ @OCAMLLFLAGS@
OCAMLDEP = @OCAMLDEP@ -I ndcore -I ndcore/tests
OCAMLDOC = @OCAMLDOC@ -stars -m A -I ndcore/
OCAMLYACC = @OCAMLYACC@ -v
OCAMLLEX = @OCAMLLEX@

# SOURCE FILES

CORE_ML    = ndcore/term.ml ndcore/norm.ml ndcore/unify.ml ndcore/index.ml \
	     ndcore/type.ml ndcore/typing.ml ndcore/pprint.ml
TEST_ML    = ndcore/tests/oUnit.ml ndcore/tests/test.ml
BEDWYR_MLLY= table.ml system.ml prover.ml \
	     config.ml parser.mly lexer.mll \
	     main.ml
BEDWYR_MLL = $(BEDWYR_MLLY:.mly=.ml)
BEDWYR_ML  = $(BEDWYR_MLL:.mll=.ml)

CORE_MLI   = $(wildcard $(CORE_ML:.ml=.mli))
BEDWYR_MLI = $(filter-out parser.mli,$(wildcard $(BEDWYR_ML:.ml=.mli)))

CORE_SRC   = $(CORE_ML)   $(CORE_MLI)
TEST_SRC   = $(TEST_ML)
BEDWYR_SRC = $(BEDWYR_ML) $(BEDWYR_MLI)

CORE_FILES   = $(CORE_SRC)
TEST_FILES   = $(TEST_SRC)
BEDWYR_FILES = $(BEDWYR_MLLY) $(BEDWYR_MLI)

CORE_O   = $(CORE_ML:.ml=.$(cmo))
TEST_O   = $(TEST_ML:.ml=.$(cmo))
BEDWYR_O = $(BEDWYR_ML:.ml=.$(cmo))

# BUILDING

all: bedwyr

# TODO build ndcore.cma *and* ndcore.cmxa,
# since it is a lib, not just a part of bedwyr
ndcore.$(cma): $(CORE_O)
	$(OCAMLL) $^ -a -o $@

ndcore/test: ndcore.$(cma) $(TEST_O)
	$(OCAMLL) unix.$(cma) $^ -o $@

bedwyr: ndcore.$(cma) $(BEDWYR_O)
	$(OCAMLL) unix.$(cma) $^ -o $@

-include depend
depend: $(CORE_SRC) $(TEST_SRC) $(BEDWYR_SRC)
	$(OCAMLDEP) $^ > depend

%.$(cmo): %.ml
	$(OCAMLC) $<
%.cmi: %.mli
	$(OCAMLC) $<
%.ml: %.mly
	$(OCAMLYACC) $<
%.mli: %.mly
	$(OCAMLYACC) $<
%.ml: %.mll
	$(OCAMLLEX) $<
%.ml: %.ml.in
	@sed \
	  -e 's|{PACKAGE_NAME}|$(PACKAGE_NAME)|'\
	  -e 's|{PACKAGE_VERSION}|$(PACKAGE_VERSION)|'\
	  -e 's|{BUILD}|$(shell (svn info 2>&- || git svn info 2>&-) | grep Revision | sed -e "s/Revision: //")|'\
	  $^ > $@

# OTHER TARGETS

test: ndcore/test
	@<

.PHONY: doc
doc: bedwyr $(CORE_MLI) $(BEDWYR_MLI)
ifneq (@OCAMLDOC@,)
	$(OCAMLDOC) -d ../doc/html -html $(CORE_MLI) $(BEDWYR_MLI)
endif

$(PACKAGE_TARNAME).tar: $(CORE_FILES) $(TEST_FILES) $(BEDWYR_FILES)
	$(TAR) -cf $@ --xform 's|^|$(ARCH)/src/|' $^

.PHONY: clean
clean:
	rm -f bedwyr
	rm -f ndcore/test
	rm -f bedwyr_src.tar
	rm -f config.ml parser.ml parser.mli lexer.ml parser.output
	rm -f *.cm[ixoa] *.cmxa *.[oa]
	rm -f ndcore/*.cm[ixoa] ndcore/*.cmxa ndcore/*.[oa]
	rm -f ndcore/tests/*.cm[ixoa] ndcore/tests/*.cmxa ndcore/tests/*.[oa]
	rm -f ../doc/html/*.html
