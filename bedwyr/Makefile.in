# Makefile.in designed for ndcore/bedwyr
#
# $(make TARGET=$TARGET) compiles
# $(make TARGET=$TARGET install) installs
# $(make TARGET=$TARGET dist) builds packages
#
# $TARGET can be "ndcore" for this library only,
# "bedwyr" for the program only (requires ndcore to either
# havinge been compiled just before, installed in a custom place
# wrt the current Makefile config, or installed in a standard place),
# and "" for both (in which case all the doc will be in /u/s/d/bedwyr).

# DEFINITIONS

PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
DIST_NAME       = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)
ifeq ($(TARGET),)
PACKAGE_NAME = $(PACKAGE_TARNAME)
else
PACKAGE_NAME = $(TARGET)
endif

TAR	= @TAR@ -p
FIND	= @FIND@
BZIP2	= bzip2 -9
GZIP	= gzip -9

prefix        =@prefix@
exec_prefix   =@exec_prefix@
bindir        =@bindir@
#sbindir       =@sbindir@
#libexecdir    =@libexecdir@
datarootdir   =@datarootdir@
#datadir       =@datadir@
#sysconfdir    =@sysconfdir@
#sharedstatedir=@sharedstatedir@
#localstatedir =@localstatedir@
#includedir    =@includedir@
#oldincludedir =@oldincludedir@
docdir        =$(patsubst %$(PACKAGE_TARNAME),%$(PACKAGE_NAME),@docdir@)
#infodir       =@infodir@
htmldir       =@htmldir@
#dvidir        =@dvidir@
pdfdir        =@pdfdir@
psdir         =@psdir@
libdir        =@libdir@
#localedir     =@localedir@
mandir        =@mandir@

PREFIX        =$(DESTDIR)$(prefix)
EXEC_PREFIX   =$(DESTDIR)$(exec_prefix)
BINDIR        =$(DESTDIR)$(bindir)
#SBINDIR       =$(DESTDIR)$(sbindir)
#LIBEXECDIR    =$(DESTDIR)$(libexecdir)
DATAROOTDIR   =$(DESTDIR)$(datarootdir)
#DATADIR       =$(DESTDIR)$(datadir)
#SYSCONFDIR    =$(DESTDIR)$(sysconfdir)
#SHAREDSTATEDIR=$(DESTDIR)$(sharedstatedir)
#LOCALSTATEDIR =$(DESTDIR)$(localstatedir)
#INCLUDEDIR    =$(DESTDIR)$(includedir)
#OLDINCLUDEDIR =$(DESTDIR)$(oldincludedir)
DOCDIR        =$(DESTDIR)$(docdir)
#INFODIR       =$(DESTDIR)$(infodir)
HTMLDIR       =$(DESTDIR)$(htmldir)
#DVIDIR        =$(DESTDIR)$(dvidir)
PDFDIR        =$(DESTDIR)$(pdfdir)
PSDIR         =$(DESTDIR)$(psdir)
LIBDIR        =$(DESTDIR)$(libdir)/ocaml/slimmer
#LOCALEDIR     =$(DESTDIR)$(localedir)
MANDIR        =$(DESTDIR)$(mandir)

INSTALL     = @INSTALL@
INSTALL_OPTS=-v
INSTALL_DIR = @INSTALL_PROGRAM@ $(INSTALL_OPTS) -d
INSTALL_BIN = @INSTALL_PROGRAM@ $(INSTALL_OPTS) -p
INSTALL_DOC = @INSTALL_DATA@ $(INSTALL_OPTS) -p

cma = @cma@

# FILES

XPL = list.def internal/scoping.def internal/checks.def \
      3bits.def lambda.def progs.def \
      graph-alt.def minmax.def multisim.def \
      tictactoe.def \
      pi/pi_trace.def pi/corr-assert.def pi/pi_modal.def \
      pi/pi_mini.def pi/pi_nat.def pi/pi_church.def

# debhelper has his own tools to install copyright and changelog
ifeq ($(DISTRIB),debian)
NDCORE_DOCS	= README TODO
BEDWYR_DOCS	= README TODO
else
NDCORE_DOCS	= COPYING CHANGES README TODO
BEDWYR_DOCS	= COPYING CHANGES README TODO
endif
DOCS		= $(BEDWYR_DOCS)
CONTRIB		= contrib/emacs/bedwyr.el \
		  contrib/vim/ftdetect/bedwyr.vim \
		  contrib/vim/syntax/bedwyr.vim
EXAMPLES	= $(shell find examples -type f '!' -path '*.svn*' \
		  '!' -name \*~ '!' -name .\*.sw\* '!' -name \*.old)
USERGUIDE	= userguide-1.3
TEX_FILES	= $(USERGUIDE).tex
PS_FILES	= $(USERGUIDE).ps.gz
PDF_FILES	= $(USERGUIDE).pdf
HTML_FILES	= $(USERGUIDE).html
USERGUIDE_FILES	= doc/$(TEX_FILES).tex doc/userguide.bib doc/Makefile
ARCH_FILES	= configure.ac Makefile.in install-sh \
		  $(DOCS) $(CONTRIB) $(EXAMPLES) \
		  $(USERGUIDE_FILES)

ndcore = src/ndcore/ndcore.$(cma)
bedwyr = src/bedwyr

# BUILDING

.PHONY: $(ndcore) $(bedwyr)

all: Makefile
ifeq ($(TARGET),ndcore)
	make $(ndcore)
else ifeq ($(TARGET),bedwyr)
	make $(bedwyr)
else ifeq ($(TARGET),)
	make $(ndcore)
	make $(bedwyr)
endif

$(bedwyr): src/Makefile
	make -C src

$(ndcore): src/ndcore/Makefile
	make -C src/ndcore

$(ndcore:$(cma)=a): src/ndcore/Makefile
	make -C src/ndcore

%: configure %.in
	./$<

configure: configure.ac
	autoconf

# TESTING

.PHONY: test examples_tests

test:
	@echo Testing the core LLambda library
	make -C src/ndcore test
	@echo Testing bedwyr on examples
	@bash -c 'time $(MAKE) examples_tests'

examples_tests: src/bedwyr
	@for i in $(XPL) ; do \
	  echo "==== Running tests in $$i ====" ; \
	  if $< -t -I examples/$$i ; then echo "All done." ; \
	  else echo "Error." ; break ; fi ; \
	done

# DOC

.PHONY: doc bedwyr_doc

ifeq ($(TARGET),)
doc: ndcore_doc bedwyr_doc
else
doc: $(TARGET)_doc
endif

ndcore_doc:
ifneq (@OCAMLDOC@,)
	make -C src/ndcore doc
endif

bedwyr_doc:
ifneq (@OCAMLDOC@,)
	make -C src doc
	make -C doc
endif

# INSTALL

ifeq ($(TARGET),)
install: install_ndcore install_bedwyr
else
install: install_$(TARGET)
endif

install_ndcore: ndcore_doc $(NDCORE_DOCS:=.bz2)
	@$(INSTALL_DIR) $(LIBDIR)
	$(INSTALL_DOC) $(ndcore) $(wildcard $(ndcore:$(cma)=a)) $(LIBDIR)
	$(TAR) -xf $(ndcore:$(cma)=cmi.tar) -C $(LIBDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(NDCORE_DOCS:=.bz2) $(DOCDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(HTMLDIR)/html
	@$(INSTALL_DOC) doc/html/ndcore/style.css doc/html/ndcore/*.html \
	  $(HTMLDIR)/html
endif

install_bedwyr: bedwyr_doc $(BEDWYR_DOCS:=.bz2)
	@$(INSTALL_DIR) $(BINDIR)
	@$(INSTALL_BIN) $(bedwyr) $(BINDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(BEDWYR_DOCS:=.bz2) $(DOCDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(PSDIR)
	@$(INSTALL_DIR) $(PDFDIR)
	@$(INSTALL_DIR) $(HTMLDIR)
	@$(INSTALL_DOC) doc/$(PS_FILES) $(PSDIR)
	@$(INSTALL_DOC) doc/$(PDF_FILES) $(PDFDIR)
	@$(INSTALL_DOC) doc/$(HTML_FILES) $(HTMLDIR)
	@$(INSTALL_DIR) $(HTMLDIR)/ref
	@$(INSTALL_DOC) doc/html/bedwyr/style.css doc/html/bedwyr/*.html \
	  $(HTMLDIR)/ref
endif
#	@$(INSTALL_DIR) $(MANDIR)/man1
#	@$(INSTALL_DOC) $(MAN) $(MANDIR)/man1
	@$(INSTALL_DIR) $(DATAROOTDIR)/$(PACKAGE_NAME)
	@for i in $(CONTRIB) ; do \
	  $(INSTALL_DOC) -D $$i $(DATAROOTDIR)/$(PACKAGE_NAME)/$$i ; done
	@for i in $(EXAMPLES) ; do \
	  $(INSTALL_DOC) -D $$i $(DATAROOTDIR)/$(PACKAGE_NAME)/$$i ; done

# ARCHIVE

.PHONY: dist src/ndcore/ndcore.tar src/bedwyr.tar dist.tar

dist: Makefile
	make $(DIST_NAME).tar.bz2
	make $(DIST_NAME).tar.gz

src/ndcore/ndcore.tar:
	make -C src/ndcore archive

src/bedwyr.tar:
	make -C src archive

dist.tar: $(ARCH_FILES)
	$(TAR) -cf $@ --xform 's|^|$(DIST_NAME)/|' $^

$(DIST_NAME).tar: src/ndcore/ndcore.tar src/bedwyr.tar dist.tar
	$(TAR) -cf $@ -T /dev/null
	for i in $^ ; do \
	  $(TAR) -Af $@ $$i ; done

%.bz2: %
	$(BZIP2) -f -k $<
%.gz: %
	$(GZIP) -f -c $< > $@

# OTHER TARGETS

.PHONY: help clean distclean

help:
	@echo " help           this message"
	@echo
	@echo " all (default)  compiles the library/program wrt \$$TARGET"
	@echo " test           runs a test on ndcore, then on bedwyr"
	@echo " doc            compiles the doc from the sources wrt \$$TARGET"
	@echo "                (requires the compilation of the lib/program)"
	@echo
	@echo " install        install the files wrt to the command-line"
	@echo "                variables \$$DESTDIR and \$$TARGET and the"
	@echo "                parameters given to ./configure"
	@echo
	@echo " dist           build $(DIST_NAME).tar.bz2"
	@echo "                and $(DIST_NAME).tar.gz"
	@echo
	@echo " help           display this message"
	@echo " distclean      remove almost all generated files"
	@echo " clean          remove compiled files"
	@echo
	@echo " \$$TARGET can be \"ndcore\" (for the library only), \"bedwyr\""
	@echo " (for the programm only, requires ndcore to be previously"
	@echo " compiled or installed), or \"\" (default, compiles both)"

distclean: clean
	find . -name '*~' -exec rm \{\} \;
	rm -f *.bz2 *.gz *.tar
	rm -f config.status config.log
	rm -f src/config.ml
	rm -f configure
	rm -f Makefile
	rm -f src/Makefile
	rm -f src/ndcore/Makefile
	rm -rf autom4te.cache

clean:
	make -C src clean
	make -C src/ndcore clean
	make -C doc clean
