# Makefile.in designed for ndcore/bedwyr
#
# $(make TARGET=$TARGET) compiles
# $(make TARGET=$TARGET install) installs
# $(make TARGET=$TARGET dist) builds packages
#
# $TARGET can be "ndcore" for this library only,
# "bedwyr" for the program only (requires ndcore to either
# havinge been compiled just before, installed in a custom place
# wrt the current Makefile config, or installed in a standard place),
# and "" for both (in which case all the doc will be in /u/s/d/bedwyr).

# DEFINITIONS

ifeq ($(TARGET),)
PACKAGE_TARNAME = @PACKAGE_TARNAME@
else
PACKAGE_TARNAME = $(TARGET)
endif
PACKAGE_VERSION = @PACKAGE_VERSION@
ARCH_NAME       = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

TAR	= @TAR@ -p
FIND	= @FIND@

prefix        =@prefix@
exec_prefix   =@exec_prefix@
bindir        =@bindir@
#sbindir       =@sbindir@
#libexecdir    =@libexecdir@
datarootdir   =@datarootdir@
#datadir       =@datadir@
#sysconfdir    =@sysconfdir@
#sharedstatedir=@sharedstatedir@
#localstatedir =@localstatedir@
#includedir    =@includedir@
#oldincludedir =@oldincludedir@
docdir        =@docdir@
#infodir       =@infodir@
htmldir       =@htmldir@
#dvidir        =@dvidir@
pdfdir        =@pdfdir@
psdir         =@psdir@
libdir        =@libdir@
#localedir     =@localedir@
mandir        =@mandir@

PREFIX        =$(DESTDIR)$(prefix)
EXEC_PREFIX   =$(DESTDIR)$(exec_prefix)
BINDIR        =$(DESTDIR)$(bindir)
#SBINDIR       =$(DESTDIR)$(sbindir)
#LIBEXECDIR    =$(DESTDIR)$(libexecdir)
DATAROOTDIR   =$(DESTDIR)$(datarootdir)
#DATADIR       =$(DESTDIR)$(datadir)
#SYSCONFDIR    =$(DESTDIR)$(sysconfdir)
#SHAREDSTATEDIR=$(DESTDIR)$(sharedstatedir)
#LOCALSTATEDIR =$(DESTDIR)$(localstatedir)
#INCLUDEDIR    =$(DESTDIR)$(includedir)
#OLDINCLUDEDIR =$(DESTDIR)$(oldincludedir)
DOCDIR        =$(DESTDIR)$(docdir:@PACKAGE_TARNAME@=$(PACKAGE_TARNAME))
#INFODIR       =$(DESTDIR)$(infodir)
HTMLDIR       =$(DESTDIR)$(htmldir)
#DVIDIR        =$(DESTDIR)$(dvidir)
PDFDIR        =$(DESTDIR)$(pdfdir)
PSDIR         =$(DESTDIR)$(psdir)
LIBDIR        =$(DESTDIR)$(libdir)/ocaml/slimmer
#LOCALEDIR     =$(DESTDIR)$(localedir)
MANDIR        =$(DESTDIR)$(mandir)

INSTALL     = @INSTALL@
INSTALL_OPTS=-v
INSTALL_DIR = @INSTALL_PROGRAM@ $(INSTALL_OPTS) -d
INSTALL_BIN = @INSTALL_PROGRAM@ $(INSTALL_OPTS) -p
INSTALL_DOC = @INSTALL_DATA@ $(INSTALL_OPTS) -p

cma = @cma@

# FILES

XPL = list.def internal/scoping.def internal/checks.def \
      miniml.def 3bits.def lambda.def progs.def \
      graph-alt.def minmax.def multisim.def \
      tictactoe.def \
      pi/pi_trace.def pi/corr-assert.def pi/pi_modal.def \
      pi/pi_mini.def pi/pi_nat.def pi/pi_church.def

NDCORE_DOCS	= COPYING CHANGES README TODO
BEDWYR_DOCS	= COPYING CHANGES README TODO
CONTRIB		= contrib/emacs/bedwyr.el \
		  contrib/vim/ftdetect/bedwyr.vim \
		  contrib/vim/syntax/bedwyr.vim
EXAMPLES	= $(shell find examples -type f '!' -path '*.svn*' \
		  '!' -name \*~ '!' -name .\*.sw\* '!' -name \*.old)
USERGUIDE	= doc/*.tex doc/userguide.bib doc/Makefile
PDF		= userguide.pdf
HTML		= userguide.html
ARCH_FILES	= configure.ac Makefile.in install-sh \
		  $(DOCS) $(CONSTRIB) $(EXAMPLES) \
		  $(USERGUIDE)

ndcore = src/ndcore/ndcore.$(cma)
bedwyr = src/bedwyr

# BUILDING

.PHONY: $(ndcore) $(bedwyr)

all: Makefile
ifeq ($(TARGET),ndcore)
	make $(ndcore)
else ifeq ($(TARGET),bedwyr)
	make $(bedwyr)
else ifeq ($(TARGET),)
	make $(ndcore)
	make $(bedwyr)
endif

$(bedwyr): src/Makefile
	make -C src

$(ndcore): src/ndcore/Makefile
	make -C src/ndcore

$(ndcore:$(cma)=a): src/ndcore/Makefile
	make -C src/ndcore

%: configure %.in
	./$<

configure: configure.ac
	autoconf

# TESTING

.PHONY: test examples_tests

test:
	@echo Testing the core LLambda library
	make -C src/ndcore test
	@echo Testing bedwyr on examples
	@bash -c 'time $(MAKE) examples_tests'

examples_tests: src/bedwyr
	@for i in $(XPL) ; do \
	  echo "==== Running tests in $$i ====" ; \
	  if $< -t -I examples/$$i ; then echo "All done." ; \
	  else echo "Error." ; break ; fi ; \
	done

# DOC

.PHONY: doc bedwyr_doc

ifeq ($(TARGET),)
doc: ndcore_doc bedwyr_doc
else
doc: $(TARGET)_doc
endif

ndcore_doc:
ifneq (@OCAMLDOC@,)
	make -C src/ndcore doc
endif

bedwyr_doc:
ifneq (@OCAMLDOC@,)
	make -C src doc
	make -C doc
endif

#doc/$(PS):
#	make -C doc $(PS)
#doc/$(PDF):
#	make -C doc $(PDF)
#doc/$(HTML):
#	make -C doc $(HTML)

# INSTALL

ifeq ($(TARGET),)
install: install_ndcore install_bedwyr
else
install: install_$(TARGET)
endif

install_ndcore: ndcore_doc $(NDCORE_DOCS:=.bz2)
	@$(INSTALL_DIR) $(LIBDIR)
	$(INSTALL_BIN) $(ndcore) $(ndcore:$(cma)=a) $(LIBDIR)
	$(TAR) -xf $(ndcore:$(cma)=cmi.tar) -C $(LIBDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(NDCORE_DOCS:=.bz2) $(DOCDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(HTMLDIR)/html
	@$(INSTALL_DOC) doc/html/ndcore/style.css doc/html/ndcore/*.html \
	  $(HTMLDIR)/html
endif

#install_bedwyr: $(bedwyr) doc/$(PS) doc/$(PDF) doc/$(HTML)
install_bedwyr: bedwyr_doc $(BEDWYR_DOCS:=.bz2)
	@$(INSTALL_DIR) $(BINDIR)
	@$(INSTALL_BIN) $(bedwyr) $(BINDIR)
	@$(INSTALL_DIR) $(DOCDIR)
	@$(INSTALL_DOC) $(BEDWYR_DOCS:=.bz2) $(DOCDIR)
	@for i in $(CONTRIB) ; do $(INSTALL_DOC) -D $$i $(DOCDIR)/$$i ; done
	@for i in $(EXAMPLES) ; do $(INSTALL_DOC) -D $$i $(DOCDIR)/$$i ; done
#	@$(INSTALL_DIR) $(PSDIR)
#	@$(INSTALL_DIR) $(PDFDIR)
#	@$(INSTALL_DIR) $(HTMLDIR)
#	@$(INSTALL_DOC) doc/$(PS) $(PSDIR)
#	@$(INSTALL_DOC) doc/$(PDF) $(PDFDIR)
#	@$(INSTALL_DOC) doc/$(HTML) $(HTMLDIR)
ifneq (@OCAMLDOC@,)
	@$(INSTALL_DIR) $(HTMLDIR)/html
	@$(INSTALL_DOC) doc/html/bedwyr/style.css doc/html/bedwyr/*.html \
	  $(HTMLDIR)/html
endif
#	@$(INSTALL_DIR) $(MANDIR)/man1
#	@$(INSTALL_DOC) $(MAN) $(MANDIR)/man1

# ARCHIVE

.PHONY: dist src/$(PACKAGE_TARNAME).tar

dist: src/Makefile bz2
bz2: $(ARCH_NAME).tar.bz2
gz: $(ARCH_NAME).tar.gz

src/$(PACKAGE_TARNAME).tar:
	make -C src $(PACKAGE_TARNAME).tar
$(ARCH_NAME).tar: $(ARCH_FILES) src/$(PACKAGE_TARNAME).tar
	$(TAR) -cf $@ --xform 's|^|$(ARCH_NAME)/|' $(ARCH_FILES)
	$(TAR) -Af $@ src/$(PACKAGE_TARNAME).tar

%.tar.bz2: %.tar
	bzip2 -f $<
	$(TAR) -tf $@
%.tar.gz: %.tar
	gzip -f $<
	$(TAR) -tf $@

%.bz2: %
	bzip2 -f -k $<
%.gz: %
	gzip -f -c $< > $@

# OTHER TARGETS

.PHONY: clean distclean

distclean: clean
	find . -name '*~' -exec rm \{\} \;
	rm -f *.bz2 *.gz *.tar
	rm -f config.status config.log
	rm -f Makefile
	rm -f src/Makefile
	rm -f src/ndcore/Makefile

clean:
	make -C src clean
	make -C src/ndcore clean
	make -C doc clean
