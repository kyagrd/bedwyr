Kind    foo,bar type.
Type    f       foo -> bar.

% This one should be ruled out because the unification on the right becomes
% non-LLambda after the left unif: it has the form (H (f x) = f a).
#assert_raise (forall y, exists a, (exists x, y = f x) -> y = f a).

% This one should be ruled out as there are two solutions for z.
% In other words, after the unification of x and y, the right unif is no more
% LLambda.
#assert_raise (forall y x, exists z, x = y -> z = x).

% A similar case.
#assert_raise (forall x y, exists a, forall t, (x = t /\ y = t) -> a = t).

% Here the right unification will eventually be (A x = x) which is no problem.
#assert (forall y, exists a, forall x, x = y -> a = x).
